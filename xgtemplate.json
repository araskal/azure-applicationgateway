{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "Base URL of the template package"
            }
        },
        "xgvmName": {
            "type": "string",
            "defaultValue": "XG-Firewall",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "payg"
            ],
            "metadata": {
                "description": "License type to use."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A3",
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "netNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Virtual Network or use an existing one."
            }
        },
      "virtualNetworkExistingRGName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Resource Group of existing Virtual Network (optional)."
        }
      },
        "virtualNetworkName":  {
            "type": "string",
            "defaultValue": "VNET",
            "metadata": {
                "description": "Name of the Virtual Network."
            }
        },
      "subnet5Name": {
        "type": "string",
        "defaultValue": "TrustXG",
        "metadata": {
          "description": "Name of the WAN side Subnet."
        }
      },
      "subnet5Prefix": {
          "type": "string",
          "defaultValue": "192.168.5.0/24",
          "metadata": {
            "description": "Prefix for the WAN side Subnet."
          }
        },
      "subnet6Name": { 
        "type": "string",
        "defaultValue": "UntrustXG",
        "metadata": {
          "description": "Name of the LAN side Subnet."
        }
      },
      "subnet6Prefix": {
          "type": "string",
          "defaultValue": "192.168.6.0/24",
          "metadata": {
            "description": "Prefix for the LAN side Subnet."
          }
        },
        "storageNewOrExisting": {
          "type": "string",
          "defaultValue": "new",
          "allowedValues": [
            "new",
            "existing"
          ],
          "metadata": {
            "description": "Create new Storage Account or use an existing one."
          }
        },
        "storageRG": {
          "type": "string",
          "defaultValue": "",
          "metadata": {
            "description": "Resource Group of existing Storage Account (optional)."
          }
        },
        "storageAccountName": {
          "type": "string",
          "metadata": {
            "description": "Unique name for Storage Account."
          }
        },
        "storageType": {
          "type": "string",
          "defaultValue": "Standard_LRS",
          "metadata": {
            "description": "Replication mode for Storage Account."
          }
        },
        "location": {
          "type": "string",
          "defaultValue": "[resourceGroup().Location]",
          "metadata": {
            "description": "Geo-Location you want to deploy to."
          }
        },
        "nicWan": {
          "type": "string",
          "defaultValue": "PortB",
          "metadata": {
            "description": "Network Interface Name for WAN Zone"
          }
        },
        "nicLan": {
          "type": "string",
          "defaultValue": "PortA",
          "metadata": {
            "description": "Network Interface Name for LAN Zone"
          }
        },
        "networkSecurityGroupName": {
          "type": "string",
          "defaultValue": "SecurityGroup",
          "metadata": {
            "description": "Name of the Security Group"
          }
        },
        "availabilitySetName": {
          "type": "string",
          "defaultValue": "AvailabilitySet",
          "metadata": {
            "description": "Name of the Availability Set"
          }
        }
      },
    "variables": {
        "netTemplate": "[concat(parameters('baseUrl'),'/shared/vnet-',parameters('netNewOrExisting'),'.json')]",
        "group": "[resourceGroup().name]",
        "vhdContainer": "vhds",
        "publicIpType": "Dynamic",
        "adminUsername": "azureuser",
        "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
        "apiVersion": {
            "resources": {
                "deployments": "2016-02-01"
            },
            "network": "2016-06-01",
            "storage": "2016-01-01",
            "compute": "2016-03-30"
        },
        "imagePublisher": "sophos",
        "imageOffer": "sophos-xg"
    },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "[variables('apiVersion').compute]",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "properties": {
        "mode": "Incremental",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageType')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('storageRG')]"
          }
        }
      },
    {
      "apiVersion": "[variables('apiVersion').network]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "NetworkSecurityGroup"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow_webui",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4444",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow_ssh",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('netTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "192.168.0.0/16"
          },
          "Subnet1Name": {
            "value": "[parameters('subnet5Name')]"
          },
          "Subnet1Prefix": {
            "value": "[parameters('subnet6Prefix')]"
          },
          "Subnet2Name": {
            "value": "[parameters('subnet6Name')]"
          },
          "Subnet2Prefix": {
            "value": "[parameters('subnet6Prefix')]"
          },
          "vnetExistingRGName": {
            "value": "[parameters('virtualNetworkExistingRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion').network]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicWan')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic"
            },
            "subnet": {
              "id": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet1Ref.value]"
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVersion').network]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicLan')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet2Ref.value]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVersion').compute]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('xgvmName')]",
      "plan": {
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]",
        "name": "[parameters('imageSku')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicWan'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicLan'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
        "[concat('Microsoft.Compute/availabilitySets/',parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('xgvmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('xgvmName'),'-dataDisk')]",
              "lun": 0,
              "createOption": "FromImage",
              "vhd": {
                "uri": "[concat(reference('SettingUpStorageAccount').outputs.storageAccountEndpoint.value, variables('vhdContainer'),'/',parameters('xgvmName'),'-aux.vhd')]"
              }
            }
          ],
          "osDisk": {
            "name": "[concat(parameters('xgvmName'),'-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat(reference('SettingUpStorageAccount').outputs.storageAccountEndpoint.value, variables('vhdContainer'),'/',parameters('xgvmName'),'-prim.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicWan'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicLan'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference('SettingUpStorageAccount').outputs.storageAccountEndpoint.value]"
          }
        }
      }
    }
  ],
    "outputs": {
        "fqdn": {
            "value": "[reference('SettingUpPublicIP').outputs.fqdn.value]",
            "type": "string"
        }
    }
}