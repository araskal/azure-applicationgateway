{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "nsg-mgmt",
      "metadata": {
        "description": "Network Security Group Name"
      }
    },
    "networkSecurityGroupInboundSrcIP": {
      "type": "string",
      "metadata": {
        "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT), to restrict access to the deployment."
      },
      "defaultValue": "0.0.0.0/0"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet-FW",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Select whether to use a new or existing Virtual Network, specified by virtualNetworkName"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "CIDR for Virtual Network"
      }
    },
    "MgmtSubnetName": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "Subnet for Management PaloAlto Network"
      }
    },
    "mgmtSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "CIDR for Management PaloAlto Network"
      }
    },
    "UntrustXGSubnetName": {
      "type": "string",
      "defaultValue": "UntrustXG",
      "metadata": {
        "description": "Subnet for UnTrusted XG Network"
      }
    },
    "UntrustXGSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.5.0/24",
      "metadata": {
        "description": "CIDR for UnTrusted XG Network"
      }
    },
    "TrustXGSubnetName": {
      "type": "string",
      "defaultValue": "TrustXG",
      "metadata": {
        "description": "Subnet for Trusted XG Network"
      }
    },
    "TrustXGSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.6.0/24",
      "metadata": {
        "description": "CIDR for Trusted XG Network"
      }
    },
    "AuthSubnetName": {
      "type": "string",
      "defaultValue": "Auth",
      "metadata": {
        "description": "Subnet for Authentication Network"
      }
    },
    "AuthSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.7.0/24",
      "metadata": {
        "description": "CIDR for Authentication Network"
      }
    },
    "LogSubnetName": {
      "type": "string",
      "defaultValue": "Log",
      "metadata": {
        "description": "Subnet for Logging Network"
      }
    },
    "LogSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.8.0/24",
      "metadata": {
        "description": "CIDR for Logging Network"
      }
    },
    "DBSubnetName": {
      "type": "string",
      "defaultValue": "DB",
      "metadata": {
        "description": "Subnet for DB Network"
      }
    },
    "DBSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.9.0/24",
      "metadata": {
        "description": "CIDR for DB Network"
      }
    },
    "FileServSubnetName": {
      "type": "string",
      "defaultValue": "File",
      "metadata": {
        "description": "Subnet for File Server Network"
      }
    },
    "FileServSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.10.0/24",
      "metadata": {
        "description": "CIDR for File Server Network"
      }
    },
    "untrustedSubnetName": {
      "type": "string",
      "defaultValue": "Untrust",
      "metadata": {
        "description": "Subnet for Untrusted PaloAlto Network"
      }
    },
    "untrustedSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "CIDR for Untrusted PaloAltoNetwork"
      }
    },
    "trustedSubnetName": {
      "type": "string",
      "defaultValue": "Trust",
      "metadata": {
        "description": "Subnet for Trusted PaloAlto Network"
      }
    },
    "trustedSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.2.0/24",
      "metadata": {
        "description": "CIDR for Trusted PaloAlto Network"
      }
    },
    "appGatewayName": {
      "type": "string",
      "defaultValue": "myAppGw",
      "metadata": {
        "description": "App Gateway name - used to identify resource in Azure portal"
      }
    },
    "appGatewayDnsName": {
      "type": "string",
      "defaultValue": "promasterregion",
      "metadata": {
        "description": "App Gateway Public IP DNS Name. Must be globally unique."
      }
    },
    "appGatewaySubnetName": {
      "type": "string",
      "defaultValue": "AppGWSubnet",
      "metadata": {
        "description": "Subnet for App Gateway"
      }
    },
    "appGatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.3.0/24",
      "metadata": {
        "description": "CIDR for App Gateway"
      }
    },
    "internalLoadBalancerName": {
      "type": "string",
      "defaultValue": "LoadBalancer1",
      "metadata": {
        "description": "Internal Load Balancer name - used to identify resource in Azure portal"
      }
    },
    "internalLoadBalancer2Name": {
      "type": "string",
      "defaultValue": "LoadBalancer2",
      "metadata": {
        "description": "Internal Load Balancer name - used to identify resource in Azure portal"
      }
    },
    "internalLoadBalancer3Name": {
      "type": "string",
      "defaultValue": "LoadBalancer3",
      "metadata": {
        "description": "Internal Load Balancer name - used to identify resource in Azure portal"
      }
    },

    "backendSubnetName": {
      "type": "string",
      "defaultValue": "backendSubnet",
      "metadata": {
        "description": "Subnet for Backend WWW Network"
      }
    },
    "backendSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.4.0/24",
      "metadata": {
        "description": "CIDR for Backend WWW Network"
      }
    },
    "backendVmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1",
        "Standard_D1",
        "Standard_D1_v2"
      ],
      "metadata": {
        "description": "Azure VM size for backend VMs.  Not all sizes are available in all regions."
      },
      "defaultValue": "Standard_D1"
    },
    "firewallModel": {
      "type": "string",
      "defaultValue": "byol",
      "allowedValues": [
        "byol",
        "bundle1",
        "bundle2"
      ],
      "metadata": {
        "description": "byol = Bring Your Own License; bundle1 = Bundle 1 PAYG (Hourly); bundle2 = Bundle 2 PAYG (Hourly)"
      }
    },
    "firewallVmName": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of VM-Series VM in the Azure portal"
      },
      "defaultValue": "VM-Series"
    },
    "firewallVmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D3",
        "Standard_D4",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D14_v2",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Azure VM size for VM-Series"
      },
      "defaultValue": "Standard_D3_v2"
    },
    "MgmtPublicIPAddressName": {
      "type": "string",
      "defaultValue": "promastermgmt",
      "metadata": {
        "description": "DNS Name prefix of public IP resource for Management interface of VM-Series firewall.  Name must be globally unique."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "promasterstorage",
      "metadata": {
        "description": "Name of the storage account created to store the VM's disks.  Storage account name must be globally unique."
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "Description": "Select new or existing Storage Account, specified by storageAccountName"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Type of the storage account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "username": {
      "type": "string",
      "defaultValue": "promasteradmin",
      "metadata": {
        "description": "Username of the administrator account of VM instances"
      }
    },
    "authenticationType": {
      "type": "string",
      "metadata": {
        "description": "Type of administrator user authentication "
      },
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "defaultValue": "password"
    },
    "password": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
      }
    },
    "xgpassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the administrator account of the secondary firewall."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH RSA public key file as a string. Must be specified if Authentication Type is 'sshPublicKey'."
      }
    },
    "xgvmName": {
      "type": "string",
      "defaultValue": "XG-Firewall",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "rgname": "[resourceGroup().name]",
    "LoadBalancerType": "layer-7",
    "firewallVmCount": 1,
    "baseUrl": "https://raw.githubusercontent.com/araskal/azure-applicationgateway/master/",
    "nsgURL": "[concat(variables('baseUrl'),'/nsg-new.json')]",
    "vnetURL": "[concat(variables('baseUrl'),'/vnet-new.json')]",
    "publicLBURL": "[concat(variables('baseUrl'),'/public-lb-', variables('LoadBalancerType'), '.json')]",
    "privateLBURL": "[concat(variables('baseUrl'),'/private-lb-password.json')]",
    "storageAccountSetupURL": "[concat(variables('baseUrl'),'/storageAccount-new.json')]",
    "vmseriesURL": "[concat(variables('baseUrl'),'/vmseries.json')]",
    "setupXG": "[concat(variables('baseUrl'),'/xgtemplate.json')]",
    "setupWebServer": "[concat(variables('baseUrl'),'/setupWebServer.json')]",
    "setupLogServer": "[concat(variables('baseUrl'),'/setupLogServer.json')]",
    "setupDBServer": "[concat(variables('baseUrl'),'/setupDBServer.json')]",
    "setupFileServer": "[concat(variables('baseUrl'),'/setupFileServer.json')]",
    "setupAppServer": "[concat(variables('baseUrl'),'/setupAppServer.json')]",
    "privateLBURL2": "[concat(variables('baseUrl'),'/setup2ndLBInternal.json')]",
  },
  "resources": [
    {
      "name": "SetupNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nsgURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "nsgName": {
            "value": "[parameters('networkSecurityGroupName')]"
          },
          "srcIPInboundNSG": {
            "value": "[parameters('networkSecurityGroupInboundSrcIP')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          }
        }
      }
    },
    {
      "name": "SetupVNET",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SetupNSG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nsgName": {
            "value": "[parameters('networkSecurityGroupName')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "subnet0Name": {
            "value": "[parameters('MgmtSubnetName')]"
          },
          "subnet1Name": {
            "value": "[parameters('untrustedSubnetName')]"
          },
          "subnet2Name": {
            "value": "[parameters('trustedSubnetName')]"
          },
          "subnet3Name": {
            "value": "[parameters('appGatewaySubnetName')]"
          },
          "subnet4Name": {
            "value": "[parameters('backendSubnetName')]"
          },
          "subnet5Name": {
            "value": "[parameters('untrustXGSubnetName')]"
          },
          "subnet6Name": {
            "value": "[parameters('trustXGSubnetName')]"
          },
          "subnet7Name": {
            "value": "[parameters('AuthSubnetName')]"
          },
          "subnet8Name": {
            "value": "[parameters('LogSubnetName')]"
          },
          "subnet9Name": {
            "value": "[parameters('DBSubnetName')]"
          },
          "subnet10Name": {
            "value": "[parameters('FileServSubnetName')]"
          },
          "subnet0Prefix": {
            "value": "[parameters('mgmtSubnetPrefix')]"
          },
          "subnet1Prefix": {
            "value": "[parameters('untrustedSubnetPrefix')]"
          },
          "subnet2Prefix": {
            "value": "[parameters('trustedSubnetPrefix')]"
          },
          "subnet3Prefix": {
            "value": "[parameters('appGatewaySubnetPrefix')]"
          },
          "subnet4Prefix": {
            "value": "[parameters('backendSubnetPrefix')]"
          },
          "subnet5Prefix": {
            "value": "[parameters('UntrustXGSubnetPrefix')]"
          },
          "subnet6Prefix": {
            "value": "[parameters('TrustXGSubnetPrefix')]"
          },
          "subnet7Prefix": {
            "value": "[parameters('AuthSubnetPrefix')]"
          },
          "subnet8Prefix": {
            "value": "[parameters('LogSubnetPrefix')]"
          },
          "subnet9Prefix": {
            "value": "[parameters('DBSubnetPrefix')]"
          },
          "subnet10Prefix": {
            "value": "[parameters('FileServSubnetPrefix')]"
          }
        }
      }
    },
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      }
    },
    {
      "name": "SetupVMSeries",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SetupVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmseriesURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "lbName": {
            "value": "[parameters('appGatewayName')]"
          },
          "vmCount": {
            "value": "[variables('firewallVmCount')]"
          },
          "vmName": {
            "value": "[parameters('firewallVmName')]"
          },
          "imageSku": {
            "value": "[parameters('firewallModel')]"
          },
          "vmSize": {
            "value": "[parameters('firewallVmSize')]"
          },
          "virtualNetworkName": {
            "value": "[reference('SetupVNET').outputs.vnetName.value]"
          },
          "virtualNetworkExistingRGName": {
            "value": "[variables('rgname')]"
          },
          "subnet0Name": {
            "value": "[parameters('MgmtSubnetName')]"
          },
          "subnet1Name": {
            "value": "[parameters('untrustedSubnetName')]"
          },
          "subnet2Name": {
            "value": "[parameters('trustedSubnetName')]"
          },
          "subnet3Name": {
            "value": "[parameters('appGatewaySubnetName')]"
          },
          "subnet4Name": {
            "value": "[parameters('backendSubnetName')]"
          },
          "subnet5Name": {
            "value": "[parameters('UntrustXGSubnetName')]"
          },
          "subnet6Name": {
            "value": "[parameters('TrustXGSubnetName')]"
          },
          "subnet7Name": {
            "value": "[parameters('AuthSubnetName')]"
          },
          "subnet8Name": {
            "value": "[parameters('LogSubnetName')]"
          },
          "subnet9Name": {
            "value": "[parameters('DBSubnetName')]"
          },
          "subnet10Name": {
            "value": "[parameters('FileServSubnetName')]"
          },
          "subnet0Prefix": {
            "value": "[parameters('mgmtSubnetPrefix')]"
          },
          "subnet1Prefix": {
            "value": "[parameters('untrustedSubnetPrefix')]"
          },
          "subnet2Prefix": {
            "value": "[parameters('trustedSubnetPrefix')]"
          },
          "subnet3Prefix": {
            "value": "[parameters('appGatewaySubnetPrefix')]"
          },
          "subnet4Prefix": {
            "value": "[parameters('backendSubnetPrefix')]"
          },
          "subnet5Prefix": {
            "value": "[parameters('UntrustXGSubnetPrefix')]"
          },
          "subnet6Prefix": {
            "value": "[parameters('TrustXGSubnetPrefix')]"
          },
          "subnet7Prefix": {
            "value": "[parameters('AuthSubnetPrefix')]"
          },
          "subnet8Prefix": {
            "value": "[parameters('LogSubnetPrefix')]"
          },
          "subnet9Prefix": {
            "value": "[parameters('DBSubnetPrefix')]"
          },
          "subnet10Prefix": {
            "value": "[parameters('FileServSubnetPrefix')]"
          },
          "adminUsername": {
            "value": "[parameters('username')]"
          },
          "adminPassword": {
            "value": "[parameters('password')]"
          },
          "baseUrl": {
            "value": "[variables('baseUrl')]"
          },
          "MgmtPublicIPAddressName": {
            "value": "[parameters('MgmtPublicIPAddressName')]"
          },
          "storageAccountName": {
            "value": "[reference('SettingUpStorageAccount').outputs.sid.value]"
          },
          "storageAccountNewOrExisting": {
            "value": "[parameters('storageAccountNewOrExisting')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "sshKey": {
            "value": "[parameters('sshPublicKey')]"
          }
        }
      }
    },
    {
      "name": "SetupXGFirewall",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SetupVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('setupXG')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminPassword": {
            "value": "[parameters('xgpassword')]"
          },
          "storageAccountName": {
            "value": "[reference('SettingUpStorageAccount').outputs.sid.value]"
          }
        }
      }
    },
    {
      "name": "SetupPublicLoadBalancer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SetupVNET",
        "Microsoft.Resources/deployments/SetupVMSeries"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('publicLBURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "lbName": {
            "value": "[parameters('appGatewayName')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('appGatewayDnsName')]"
          },
          "vnetName": {
            "value": "[reference('SetupVNET').outputs.vnetName.value]"
          },
          "subnetName": {
            "value": "[parameters('appGatewaySubnetName')]"
          },
          "backendIPAddresses": {
            "value": "[reference('SetupVMSeries').outputs.UntrustPrivateIPAddresses.value]"
          }
        }
      }
    },
    {
      "name": "SetupInternalLoadBalancer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SetupVNET",
        "Microsoft.Resources/deployments/SetupVMSeries"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('privateLBURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[reference('SettingUpStorageAccount').outputs.sid.value]"
          },
          "virtualNetworkName": {
            "value": "[reference('SetupVNET').outputs.vnetName.value]"
          },
          "virtualNetworkExistingRGName": {
            "value": "[variables('rgname')]"
          },
          "lbName": {
            "value": "[parameters('internalLoadBalancerName')]"
          },
          "adminUsername": {
            "value": "[parameters('username')]"
          },
          "adminPassword": {
            "value": "[parameters('password')]"
          },
          "sshKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "subnetName": {
            "value": "[parameters('backendSubnetName')]"
          },
          "frontendSubnetName": {
            "value": "[parameters('trustedSubnetName')]"
          },
          "vmSize": {
            "value": "[parameters('backendVmSize')]"
          },
          "baseUrl": {
            "value": "[variables('baseUrl')]"
          }
        }
      }
    }
  ],
  "outputs": {
  }
}